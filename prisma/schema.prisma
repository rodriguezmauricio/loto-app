generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model admins {
    id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    username      String    @db.VarChar(255)
    password_hash String
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    saldo         Decimal?  @default(0) @db.Decimal(10, 2)
    sales         sales[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model apostas {
    id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    user_id        String?  @db.Uuid
    numbers        Int[]
    lottery        String   @db.VarChar(255)
    sorteio_number String?  @db.VarChar(50)
    timestamp      DateTime @default(now()) @db.Timestamptz(6)
    result         String?  @default("pending") @db.VarChar(50)
    users          users?   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model sales {
    id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    admin_id   String?   @db.Uuid
    seller_id  String?   @db.Uuid
    sale_value Decimal   @db.Decimal(10, 2)
    sale_date  DateTime? @default(now()) @db.Timestamptz(6)
    admins     admins?   @relation(fields: [admin_id], references: [id], onUpdate: NoAction)
    sellers    sellers?  @relation(fields: [seller_id], references: [id], onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model sellers {
    id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    admin_id       String?  @db.Uuid
    username       String   @db.VarChar(255)
    phone          String?  @db.VarChar(20)
    saldo          Decimal? @default(0) @db.Decimal(10, 2)
    tipo_comissao  String?  @db.VarChar(50)
    valor_comissao Decimal? @db.Decimal(5, 2)
    password_hash  String?  @db.VarChar(255)
    sales          sales[]
    users          users?   @relation(fields: [admin_id], references: [id], onUpdate: NoAction)
}

model users {
    id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    admin_id      String?   @db.Uuid
    username      String    @db.VarChar(255)
    saldo         Decimal?  @default(0) @db.Decimal(10, 2)
    phone         String?   @db.VarChar(20)
    pix           String?   @db.VarChar(255)
    password_hash String
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    apostas       apostas[]
    sellers       sellers[]
}
